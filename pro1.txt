public class heapsort{
     
	void sort(ar[]){
		int n=ar.length;
		for(int i=n/2-1;i>=0;i--){
			heapify(ar,n,i);
		}
		for(int j=n-1;j>=0;j--){
			int temp=ar[0];
			ar[0]=ar[j];
			ar[j]=temp;
			heapify(ar,i,0);
		}
	}
	void heapify(int ar,int n,int i)
	{
		int smallest=i;
		int l=2*i+1;
		int r=2*i+2;
		if(l<n && ar[l]<ar[smallest])
			smallest=l;
		if(r<n && ar[r]<ar[smallest])
			smallest=r;
		if(i!smallest){
			int temp1=ar[i];
			ar[i]=ar[smallest];
			ar[smallest]=temp;
			heapify(ar,n,smallest);
		}

	}
	void printA(int []ar){
		for(int k=0;k<ar.length;k++){
			System.out.println(ar[k]);
		}
	}
        public static void main(String args[]){
		System.out.println("Enter size of your list");
		Scanner s=new Scanner(System.in);
		int size=s.nextInt();
		int arr[]=new int[size];
		heapsort ob=new heapsort();
		for(int q=0;q<size;q++){
			System.out.println("Enter the element");
			arr[q]=s.nextInt();
 			ob.sort(arr);
			double median=0;
			if(arr.length%2==0)
			{
				int m1=arr.length/2;
				int m2=arr.length/2+1;
				median=(double)(m1+m2)/2;
			}
			else{
				median=Math.ceil((double)arr.length/2);
			}
			System.out.println(median);
		}
	}
}